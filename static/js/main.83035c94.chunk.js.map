{"version":3,"sources":["App.js","index.js"],"names":["App","useState","name","setName","company","setCompany","phone","setPhone","email","setEmail","message","setMessage","failMessage","messageError","formMess","document","querySelector","innerHTML","style","opacity","background","getElementById","classList","add","sendFeedback","templateId","variables","window","emailjs","send","then","res","remove","setTimeout","successMessage","catch","err","className","type","id","onChange","e","target","value","placeholder","autoComplete","onClick","preventDefault","mail","match","display","animation","isEmail","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.83035c94.chunk.js","sourcesContent":["import React, { useState } from \"react\"; //on appelle le useState car on utilise des hooks pour tout ce qui sera renseigné des les inputs\n\nconst App = () => {\n\tconst [name, setName] = useState(\"\");\n\tconst [company, setCompany] = useState(\"\");\n\tconst [phone, setPhone] = useState(\"\");\n\tconst [email, setEmail] = useState(\"\");\n\tconst [message, setMessage] = useState(\"\");\n\n\tconst isEmail = () => { // sert à vérifier le format de l'email \n\t\tlet mail = document.getElementById('not-mail'); // pointe sur le label pour afficher le message d'erreur\n\t\tlet regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\n\n\t\tif (email.match(regex)) { //on vérifie si le mail match avec la reagex\n\n\t\t\tmail.style.display = 'none';\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\tmail.style.display = 'block';\n\t\t\tmail.style.animation = 'dongle 1s';\n\t\t\tsetTimeout(() => { // permet de relancer l'animation à chaque fois qu'il y a une erreur dans le format du mail\n\t\t\t\tmail.style.animation= 'none';\n\t\t\t}, 1000);\n\t\t\treturn false;\n\n\t\t}\n\t};\n\n\tconst failMessage = (messageError) => {\n\t\tlet formMess = document.querySelector('.form-message');\n\n\t\tformMess.innerHTML = messageError; //message d'erreur que nous allons mettre en paramètre en fonction du type d'erreur\n\t\tformMess.style.opacity = '1';\n\t\tformMess.style.background = 'rgb(253,87,87)';\n\n\t\tdocument.getElementById('name').classList.add('error');\n\t\tdocument.getElementById('email').classList.add('error');\n\t\tdocument.getElementById('message').classList.add('error');\n\t}\n\n\tconst successMessage = () => {\n\t\tlet formMess = document.querySelector('.form-message');\n\t\tformMess.innerHTML = 'Message envoyé 👍👍 Nous vous recontacterons dès quee possible.';\n\t\tformMess.style.background = '#00c1ec';\n\t\tformMess.style.opacity = '1';\n\n\t\tdocument.getElementById('name').classList.remove('error');\n\t\tdocument.getElementById('email').classList.remove('error');\n\t\tdocument.getElementById('message').classList.remove('error'); //on enlève les messages d'erreurs\n\n\t\tsetTimeout(() => { //enlève le successMessage au bout de qq secondes\n\t\t\tformMess.style.opacity = '0';\n\t\t}, 5000);\n\t}\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tif (name && isEmail() && message) { //cette condition va rendre obligatoire le renseignement des élèments importants\n\t\t\tsendFeedback(\"template_utbcrmx\", {\n\t\t\t\t// sendFeedback() récupre les variables que l'on retrouve dans le template\n\t\t\t\tname,\n\t\t\t\tcompany,\n\t\t\t\tphone,\n\t\t\t\temail,\n\t\t\t\tmessage,\n\t\t\t});\n\t\t} else {\n\t\t\tfailMessage(\"Merci de remplir correctement les champs requis *\");\n\t\t}\n\t};\n\n\tconst sendFeedback = (templateId, variables) => {\n\t\t// on lance une fonction async pour récupéré les données si cela fonction ou envoyer un message d'erreur si l'action n'est pa valide\n\t\twindow.emailjs\n\t\t\t.send(\"gmail\", templateId, variables)\n\t\t\t.then((res) => {\n\t\t\t\tsuccessMessage(); // tout les \"set\" suivant vont remettre le template à zéro\n\t\t\t\tsetName(\"\");\n\t\t\t\tsetCompany(\"\");\n\t\t\t\tsetPhone(\"\");\n\t\t\t\tsetEmail(\"\");\n\t\t\t\tsetMessage(\"\");\n\t\t\t})\n\t\t\t.catch(\n\t\t\t\t(err) => {\n\t\t\t\t\tfailMessage(\"Oops 😥! Une erreur s'est produite, veuillez réessayer.\")\n\t\t\t\t}\n\t\t\t);\n\t};\n\n\treturn (\n\t\t<form className=\"contact-form\">\n\t\t\t<h2>Contactez-moi</h2>\n\t\t\t<div className=\"form-content\">\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tname=\"name\"\n\t\t\t\t\tonChange={(e) => setName(e.target.value)} //après chaque changement on récupère la value de chaque input pour la stocker dans les variables correspondantes\n\t\t\t\t\tplaceholder=\"nom *\"\n\t\t\t\t\tvalue={name}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"company\"\n\t\t\t\t\tname=\"company\"\n\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\n\t\t\t\t\tplaceholder=\"société\"\n\t\t\t\t\tvalue={company}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"phone\"\n\t\t\t\t\tname=\"phone\"\n\t\t\t\t\tonChange={(e) => setPhone(e.target.value)}\n\t\t\t\t\tplaceholder=\"téléphone\"\n\t\t\t\t\tvalue={phone}\n\t\t\t\t/>\n\t\t\t\t<div className=\"email-content\">\n\t\t\t\t\t<label id=\"not-mail\">Email non valide !</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"mail\"\n\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\tplaceholder=\"email *\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<textarea\n\t\t\t\t\tid=\"message\"\n\t\t\t\t\tname=\"message\"\n\t\t\t\t\tonChange={(e) => setMessage(e.target.value)}\n\t\t\t\t\tplaceholder=\"message *\"\n\t\t\t\t\tvalue={message}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<input\n\t\t\t\tclassName=\"button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\tvalue=\"Envoyer\"\n\t\t\t\tonClick={handleSubmit} // au clique, la fonction handleSublit() est lancée\n\t\t\t/>\n\t\t\t<div className=\"form-message\"></div>\n\t\t</form>\n\t);\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}